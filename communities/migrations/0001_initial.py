# Generated by Django 3.2 on 2021-04-29 19:13

import communities.helpers
from django.conf import settings
import django.contrib.postgres.indexes
from django.db import migrations, models
import django.db.models.deletion
import imagekit.models.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Community',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='Название')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('status', models.CharField(blank=True, max_length=100, verbose_name='статус-слоган')),
                ('type', models.CharField(choices=[('CLO', 'Закрытый'), ('PRI', 'Приватный'), ('MAN', 'Созданный персоналом'), ('PUB', 'Открытый'), ('TPRO', 'Обработка'), ('TDELO', 'Открытый удалённый'), ('TDELP', 'Приватный удалённый'), ('TDELC', 'Закрытый удалённый'), ('TDELM', 'Менеджерский удалённый'), ('TBANO', 'Открытый баннер'), ('TBANP', 'Приватный баннер'), ('TBANC', 'Закрытый баннер'), ('TBANM', 'Менеджерский баннер'), ('TSUSO', 'Открытый замороженный'), ('TSUSP', 'Приватный замороженный'), ('TSUSC', 'Закрытый замороженный'), ('TSUSM', 'Менеджерский замороженный'), ('TBLOO', 'Открытый блокнутый'), ('TBLOP', 'Приватный блокнутый'), ('TBLOC', 'Закрытый блокнутый'), ('TBLOM', 'Менеджерский блокнутый')], default='TPRO', max_length=5)),
                ('s_avatar', models.ImageField(blank=True, upload_to=communities.helpers.upload_to_community_cover_directory)),
                ('perm', models.CharField(choices=[('CH', 'Детская'), ('ST', 'Обычные права'), ('VS', 'Запрос на проверку'), ('VE', 'Провернный')], default='ST', max_length=5, verbose_name='Уровень доступа')),
                ('have_link', models.CharField(blank=True, max_length=17, verbose_name='Ссылка')),
                ('banned_users', models.ManyToManyField(blank=True, related_name='banned_of_communities', to=settings.AUTH_USER_MODEL, verbose_name='Черный список')),
            ],
            options={
                'verbose_name': 'сообщество',
                'verbose_name_plural': 'сообщества',
            },
        ),
        migrations.CreateModel(
            name='CommunityCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('avatar', models.ImageField(blank=True, upload_to='', verbose_name='Аватар')),
                ('order', models.IntegerField(default=0, verbose_name='Номер')),
            ],
            options={
                'verbose_name': 'Категория сообществ',
                'verbose_name_plural': 'Категории сообществ',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='CommunityInfo',
            fields=[
                ('community', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='community_info', serialize=False, to='communities.community', verbose_name='Сообщество')),
                ('description', models.TextField(blank=True, max_length=500, null=True, verbose_name='Описание')),
                ('cover', imagekit.models.fields.ProcessedImageField(blank=True, upload_to=communities.helpers.upload_to_community_avatar_directory)),
                ('b_avatar', models.ImageField(blank=True, upload_to=communities.helpers.upload_to_community_cover_directory)),
                ('posts', models.PositiveIntegerField(default=0, verbose_name='Кол-во постов')),
                ('views_post', models.PositiveIntegerField(default=0, verbose_name='Кол-во просмотров постов')),
                ('members', models.PositiveIntegerField(default=0, verbose_name='Кол-во участников')),
                ('photos', models.PositiveIntegerField(default=0, verbose_name='Кол-во фотографий')),
                ('goods', models.PositiveIntegerField(default=0, verbose_name='Кол-во товаров')),
                ('traks', models.PositiveIntegerField(default=0, verbose_name='Кол-во аудиозаписей')),
                ('videos', models.PositiveIntegerField(default=0, verbose_name='Кол-во видеозаписей')),
            ],
            options={
                'verbose_name': 'Профиль пользователя',
                'verbose_name_plural': 'Профили пользователей',
            },
        ),
        migrations.CreateModel(
            name='CommunityNotificationsGood',
            fields=[
                ('community', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='community_notifications_good', serialize=False, to='communities.community', verbose_name='Сообщество')),
                ('comment', models.BooleanField(default=True, verbose_name='Комментарий к товару')),
                ('comment_reply', models.BooleanField(default=True, verbose_name='Ответ на комментарий к товару')),
                ('repost', models.BooleanField(default=True, verbose_name='Репост товара')),
                ('like', models.BooleanField(default=True, verbose_name='Лайк к товару')),
                ('dislike', models.BooleanField(default=True, verbose_name='Дизлайк к товару')),
                ('comment_like', models.BooleanField(default=True, verbose_name='Лайк на комментарий к товару')),
                ('comment_dislike', models.BooleanField(default=True, verbose_name='Дизлайк на комментарий к товару')),
                ('comment_reply_like', models.BooleanField(default=True, verbose_name='Лайк на ответ к товару')),
                ('comment_reply_dislike', models.BooleanField(default=True, verbose_name='Дизлайк на ответ к товару')),
            ],
        ),
        migrations.CreateModel(
            name='CommunityNotificationsMusic',
            fields=[
                ('community', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='community_notifications_music', serialize=False, to='communities.community', verbose_name='Сообщество')),
                ('repost', models.BooleanField(default=True, verbose_name='Репост аудиозаписи')),
            ],
        ),
        migrations.CreateModel(
            name='CommunityNotificationsPhoto',
            fields=[
                ('community', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='community_notifications_photo', serialize=False, to='communities.community', verbose_name='Сообщество')),
                ('comment', models.BooleanField(default=True, verbose_name='Комментарий к фото')),
                ('comment_reply', models.BooleanField(default=True, verbose_name='Ответ на комментарий к фото')),
                ('repost', models.BooleanField(default=True, verbose_name='Репост фото')),
                ('like', models.BooleanField(default=True, verbose_name='Лайк к фото')),
                ('dislike', models.BooleanField(default=True, verbose_name='Дизлайк к фото')),
                ('comment_like', models.BooleanField(default=True, verbose_name='Лайк на комментарий к фото')),
                ('comment_dislike', models.BooleanField(default=True, verbose_name='Дизлайк на комментарий к фото')),
                ('comment_reply_like', models.BooleanField(default=True, verbose_name='Лайк на ответ к фото')),
                ('comment_reply_dislike', models.BooleanField(default=True, verbose_name='Дизлайк на ответ к фото')),
            ],
        ),
        migrations.CreateModel(
            name='CommunityNotificationsPost',
            fields=[
                ('community', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='community_notifications_post', serialize=False, to='communities.community', verbose_name='Сообщество')),
                ('comment', models.BooleanField(default=True, verbose_name='Комментарий к записи')),
                ('comment_reply', models.BooleanField(default=True, verbose_name='Ответ на комментарий к записи')),
                ('mention', models.BooleanField(default=True, verbose_name='Упоминание в записи')),
                ('comment_mention', models.BooleanField(default=True, verbose_name='Упоминание в комментарии к записи')),
                ('repost', models.BooleanField(default=True, verbose_name='Репост записи')),
                ('like', models.BooleanField(default=True, verbose_name='Лайк к записи')),
                ('dislike', models.BooleanField(default=True, verbose_name='Дизлайк к записи')),
                ('comment_like', models.BooleanField(default=True, verbose_name='Лайк на комментарий к записи')),
                ('comment_dislike', models.BooleanField(default=True, verbose_name='Дизлайк на комментарий к записи')),
                ('comment_reply_like', models.BooleanField(default=True, verbose_name='Лайк на ответ к комментарию')),
                ('comment_reply_dislike', models.BooleanField(default=True, verbose_name='Дизлайк на ответ к комментарию')),
            ],
        ),
        migrations.CreateModel(
            name='CommunityNotificationsVideo',
            fields=[
                ('community', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='community_notifications_video', serialize=False, to='communities.community', verbose_name='Сообщество')),
                ('comment', models.BooleanField(default=True, verbose_name='Комментарий к ролику')),
                ('comment_reply', models.BooleanField(default=True, verbose_name='Ответ на комментарий к ролику')),
                ('repost', models.BooleanField(default=True, verbose_name='Репост ролика')),
                ('like', models.BooleanField(default=True, verbose_name='Лайк к ролику')),
                ('dislike', models.BooleanField(default=True, verbose_name='Дизлайк к ролику')),
                ('comment_like', models.BooleanField(default=True, verbose_name='Лайк на комментарий к ролику')),
                ('comment_dislike', models.BooleanField(default=True, verbose_name='Дизлайк на комментарий к ролику')),
                ('comment_reply_like', models.BooleanField(default=True, verbose_name='Лайк на ответ к ролику')),
                ('comment_reply_dislike', models.BooleanField(default=True, verbose_name='Дизлайк на ответ к ролику')),
            ],
        ),
        migrations.CreateModel(
            name='CommunityPrivateGood',
            fields=[
                ('community', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='community_private_good', serialize=False, to='communities.community', verbose_name='Сообщество')),
                ('good', models.CharField(choices=[('GA', 'Товары загружает персонал'), ('GM', 'Товары загружают подписчики'), ('GNM', 'Товары загружают все')], default='GA', max_length=5, verbose_name='Товар')),
                ('comment', models.CharField(choices=[('CA', 'Комментарии пишет персонал'), ('CM', 'Комментарии пишут подписчики'), ('CNM', 'Комментарии пишут все')], default='CNM', max_length=5, verbose_name='Комментарии')),
            ],
        ),
        migrations.CreateModel(
            name='CommunityPrivatePhoto',
            fields=[
                ('community', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='community_private_photo', serialize=False, to='communities.community', verbose_name='Сообщество')),
                ('photo', models.CharField(choices=[('PA', 'Фото загружает персонал'), ('PM', 'Фото загружают подписчики'), ('PNM', 'Фото загружают все')], default='PA', max_length=5, verbose_name='Фотографии')),
                ('comment', models.CharField(choices=[('CA', 'Комментарии пишет персонал'), ('CM', 'Комментарии пишут подписчики'), ('CNM', 'Комментарии пишут все')], default='CNM', max_length=5, verbose_name='Комментарии')),
            ],
        ),
        migrations.CreateModel(
            name='CommunityPrivatePost',
            fields=[
                ('community', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='community_private_post', serialize=False, to='communities.community', verbose_name='Сообщество')),
                ('wall', models.CharField(choices=[('SP', 'Персонал пишет'), ('SPMC', 'Персонал пишет, подписчики предлагают'), ('SPAC', 'Персонал пишет, все предлагают'), ('MP', 'Подписчики пишут'), ('MPAC', 'Подписчики пишут, все предлагают'), ('AC', 'На стене пишут все')], default='SP', max_length=5, verbose_name='Стена')),
                ('comment', models.CharField(choices=[('CA', 'Комментарии пишет персонал'), ('CM', 'Комментарии пишут подписчики'), ('CNM', 'Комментарии пишут все')], default='CNM', max_length=5, verbose_name='Комментарии')),
            ],
        ),
        migrations.CreateModel(
            name='CommunityPrivateVideo',
            fields=[
                ('community', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='community_private_video', serialize=False, to='communities.community', verbose_name='Сообщество')),
                ('video', models.CharField(choices=[('VA', 'Ролики загружает персонал'), ('VM', 'Ролики загружают подписчики'), ('VNM', 'Ролики загружают все')], default='VA', max_length=5, verbose_name='Ролик')),
                ('comment', models.CharField(choices=[('CA', 'Комментарии пишет персонал'), ('CM', 'Комментарии пишут подписчики'), ('CNM', 'Комментарии пишут все')], default='CNM', max_length=5, verbose_name='Комментарии')),
            ],
        ),
        migrations.CreateModel(
            name='CommunitySectionsOpen',
            fields=[
                ('community', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='community_sections_open', serialize=False, to='communities.community', verbose_name='Сообщество')),
                ('photo', models.BooleanField(default=True, verbose_name='Галерея открыта')),
                ('good', models.BooleanField(default=True, verbose_name='Товары открыты')),
                ('video', models.BooleanField(default=True, verbose_name='Видеоролики открыты')),
                ('music', models.BooleanField(default=True, verbose_name='Аудиозаписи открыты')),
                ('doc', models.BooleanField(default=True, verbose_name='Документы открыты')),
                ('link', models.BooleanField(default=True, verbose_name='Ссылки открыты')),
                ('article', models.BooleanField(default=True, verbose_name='Статьи открыты')),
                ('contacts', models.BooleanField(default=True, verbose_name='Контакты открыты')),
                ('discussion', models.BooleanField(default=True, verbose_name='Обсуждения открыты')),
                ('members', models.BooleanField(default=True, verbose_name='Подписчики открыты')),
            ],
        ),
        migrations.CreateModel(
            name='CommunitySubCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('avatar', models.ImageField(blank=True, upload_to='', verbose_name='Аватар')),
                ('order', models.IntegerField(default=0, verbose_name='Номер')),
                ('sudcategory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='community_categories', to='communities.communitycategory', verbose_name='Категория сообщества')),
            ],
            options={
                'verbose_name': 'Подкатегория сообществ',
                'verbose_name_plural': 'Подкатегории сообществ',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='CommunityPrivateMusic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('music', models.CharField(choices=[('VA', 'Аудиозаписи загружает персонал'), ('VM', 'Аудиозаписи загружают подписчики'), ('VNM', 'Аудиозаписи загружают все')], default='VA', max_length=5, verbose_name='Аудиозапись')),
                ('community', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='community_private_music', to='communities.community', verbose_name='Сообщество')),
            ],
        ),
        migrations.CreateModel(
            name='CommunityMembership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_administrator', models.BooleanField(default=False, verbose_name='Это администратор')),
                ('is_moderator', models.BooleanField(default=False, verbose_name='Это модератор')),
                ('is_editor', models.BooleanField(default=False, verbose_name='Это редактор')),
                ('is_advertiser', models.BooleanField(default=False, verbose_name='Это рекламодатель')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('community', models.ForeignKey(db_index=False, on_delete=django.db.models.deletion.CASCADE, related_name='memberships', to='communities.community', verbose_name='Сообщество')),
                ('user', models.ForeignKey(db_index=False, on_delete=django.db.models.deletion.CASCADE, related_name='communities_memberships', to=settings.AUTH_USER_MODEL, verbose_name='Члены сообщества')),
            ],
            options={
                'verbose_name': 'подписчик сообщества',
                'verbose_name_plural': 'подписчики сообщества',
            },
        ),
        migrations.AddField(
            model_name='community',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='communities.communitysubcategory', verbose_name='Подкатегория сообщества'),
        ),
        migrations.AddField(
            model_name='community',
            name='creator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_communities', to=settings.AUTH_USER_MODEL, verbose_name='Создатель'),
        ),
        migrations.AddIndex(
            model_name='communitymembership',
            index=models.Index(fields=['community', 'user'], name='communities_communi_f9047f_idx'),
        ),
        migrations.AddIndex(
            model_name='communitymembership',
            index=models.Index(fields=['community', 'user', 'is_administrator'], name='communities_communi_b6abad_idx'),
        ),
        migrations.AddIndex(
            model_name='communitymembership',
            index=models.Index(fields=['community', 'user', 'is_moderator'], name='communities_communi_91a862_idx'),
        ),
        migrations.AddIndex(
            model_name='communitymembership',
            index=models.Index(fields=['community', 'user', 'is_editor'], name='communities_communi_5976b6_idx'),
        ),
        migrations.AddIndex(
            model_name='communitymembership',
            index=models.Index(fields=['community', 'user', 'is_advertiser'], name='communities_communi_029e1f_idx'),
        ),
        migrations.AddIndex(
            model_name='community',
            index=django.contrib.postgres.indexes.BrinIndex(fields=['created'], name='communities_created_2903f5_brin'),
        ),
    ]
