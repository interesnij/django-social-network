# Generated by Django 5.2.1 on 2025-05-17 10:54

import django.contrib.postgres.indexes
import django.db.models.deletion
import imagekit.models.fields
import music.helpers
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('communities', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('order', models.IntegerField(default=0)),
                ('image', imagekit.models.fields.ProcessedImageField(blank=True, upload_to='music/artist/')),
                ('description', models.CharField(blank=True, max_length=200, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Исполнитель',
                'verbose_name_plural': 'Исполнители',
            },
        ),
        migrations.CreateModel(
            name='SoundGenres',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('order', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'жанр',
                'verbose_name_plural': 'жанры',
            },
        ),
        migrations.CreateModel(
            name='MusicAlbum',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('image', imagekit.models.fields.ProcessedImageField(blank=True, upload_to='music/artist/')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('description', models.CharField(blank=True, max_length=200, verbose_name='Описание')),
                ('count', models.PositiveIntegerField(default=0)),
                ('artist', models.ForeignKey(blank=True, db_index=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='artist_playlist', to='music.artist', verbose_name='Исполнитель')),
                ('creator', models.ForeignKey(db_index=False, on_delete=django.db.models.deletion.CASCADE, related_name='user_playlist_album', to=settings.AUTH_USER_MODEL, verbose_name='Создатель')),
            ],
            options={
                'verbose_name': 'плейлист',
                'verbose_name_plural': 'плейлисты',
            },
        ),
        migrations.CreateModel(
            name='MusicList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('type', models.CharField(choices=[('MAI', 'Основной'), ('LIS', 'Пользовательский'), ('_DEL', 'Удалённый'), ('_CLO', 'Закрытый менеджером'), ('_CLOMA', 'Закрытый основной'), ('_SUSMA', 'Замороженный основной'), ('_SUS', 'Замороженный')], max_length=6, verbose_name='Тип списка')),
                ('uuid', models.UUIDField(default=uuid.uuid4, verbose_name='uuid')),
                ('image', imagekit.models.fields.ProcessedImageField(blank=True, upload_to=music.helpers.upload_to_music_directory)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('description', models.CharField(blank=True, max_length=200, verbose_name='Описание')),
                ('count', models.PositiveIntegerField(default=0)),
                ('repost', models.PositiveIntegerField(default=0, verbose_name='Кол-во репостов')),
                ('copy', models.PositiveIntegerField(default=0, verbose_name='Кол-во копий')),
                ('can_see_el', models.PositiveSmallIntegerField(choices=[(1, 'Все пользователи'), (2, 'Друзья'), (3, 'Друзья,друзья друзей'), (7, 'Только я'), (4, 'Друзья, кроме'), (5, 'Некоторые друзья'), (6, 'Подписчики'), (8, 'Администраторы'), (9, 'Подписчики, кроме'), (10, 'Некоторые подписчики')], default=1, verbose_name='Кто видит записи')),
                ('create_el', models.PositiveSmallIntegerField(choices=[(1, 'Все пользователи'), (2, 'Друзья'), (3, 'Друзья,друзья друзей'), (7, 'Только я'), (4, 'Друзья, кроме'), (5, 'Некоторые друзья'), (6, 'Подписчики'), (8, 'Администраторы'), (9, 'Подписчики, кроме'), (10, 'Некоторые подписчики')], default=7, verbose_name='Кто создает записи и потом с этими документами работает')),
                ('copy_el', models.PositiveSmallIntegerField(choices=[(1, 'Все пользователи'), (2, 'Друзья'), (3, 'Друзья,друзья друзей'), (7, 'Только я'), (4, 'Друзья, кроме'), (5, 'Некоторые друзья'), (6, 'Подписчики'), (8, 'Администраторы'), (9, 'Подписчики, кроме'), (10, 'Некоторые подписчики')], default=1, verbose_name='Кто может копировать')),
                ('communities', models.ManyToManyField(blank=True, related_name='+', to='communities.community')),
                ('community', models.ForeignKey(blank=True, db_index=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='community_playlist', to='communities.community', verbose_name='Сообщество')),
                ('creator', models.ForeignKey(db_index=False, on_delete=django.db.models.deletion.CASCADE, related_name='user_playlist', to=settings.AUTH_USER_MODEL, verbose_name='Создатель')),
                ('users', models.ManyToManyField(blank=True, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'плейлист',
                'verbose_name_plural': 'плейлисты',
            },
        ),
        migrations.CreateModel(
            name='MusicListPerm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('can_see_item', models.PositiveSmallIntegerField(choices=[(1, 'Может иметь действия с элементом'), (2, 'Не может иметь действия с элементом'), (0, 'Нет значения')], default=0, verbose_name='Кто видит список/аудиозаписи')),
                ('can_see_comment', models.PositiveSmallIntegerField(choices=[(1, 'Может иметь действия с элементом'), (2, 'Не может иметь действия с элементом'), (0, 'Нет значения')], default=0, verbose_name='Кто видит комментарии')),
                ('create_item', models.PositiveSmallIntegerField(choices=[(1, 'Может иметь действия с элементом'), (2, 'Не может иметь действия с элементом'), (0, 'Нет значения')], default=0, verbose_name='Кто создает аудиозаписи')),
                ('create_comment', models.PositiveSmallIntegerField(choices=[(1, 'Может иметь действия с элементом'), (2, 'Не может иметь действия с элементом'), (0, 'Нет значения')], default=0, verbose_name='Кто создает комментарии')),
                ('can_copy', models.PositiveSmallIntegerField(choices=[(1, 'Может иметь действия с элементом'), (2, 'Не может иметь действия с элементом'), (0, 'Нет значения')], default=0, verbose_name='Кто может добавлять список/аудиозаписи себе')),
                ('list', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='music.musiclist', verbose_name='Список записей')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Исключения/Включения друга',
                'verbose_name_plural': 'Исключения/Включения друзей',
            },
        ),
        migrations.CreateModel(
            name='Music',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', imagekit.models.fields.ProcessedImageField(blank=True, upload_to=music.helpers.upload_to_music_directory)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('duration', models.CharField(blank=True, max_length=255, null=True)),
                ('title', models.CharField(max_length=255)),
                ('type', models.CharField(choices=[('PUB', 'Опубликовано'), ('_DEL', 'Удалено'), ('_CLO', 'Закрыто модератором')], default='PUB', max_length=5)),
                ('file', models.FileField(blank=True, upload_to=music.helpers.upload_to_music_directory, validators=[music.helpers.validate_file_extension], verbose_name='Аудиозапись')),
                ('view', models.PositiveIntegerField(default=0, verbose_name='Кол-во просмотров')),
                ('repost', models.PositiveIntegerField(default=0, verbose_name='Кол-во репостов')),
                ('copy', models.PositiveIntegerField(default=0, verbose_name='Кол-во копий')),
                ('order', models.PositiveIntegerField(default=0)),
                ('community', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='music_community', to='communities.community', verbose_name='Сообщество')),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_track', to=settings.AUTH_USER_MODEL, verbose_name='Создатель')),
                ('album', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='album_playlist', to='music.musicalbum')),
                ('list', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='playlist', to='music.musiclist')),
                ('genre', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='track_genre', to='music.soundgenres', verbose_name='Жанр трека')),
            ],
            options={
                'verbose_name': 'спарсенные треки',
                'verbose_name_plural': 'спарсенные треки',
                'ordering': ['-order'],
            },
        ),
        migrations.CreateModel(
            name='UserTempMusicList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='genre_field', to='music.soundgenres', verbose_name='Связь на жанр')),
                ('list', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='list_field', to='music.musiclist', verbose_name='Связь на плейлист человека или сообщества')),
                ('user', models.ForeignKey(db_index=False, on_delete=django.db.models.deletion.CASCADE, related_name='user_of_field', to=settings.AUTH_USER_MODEL, verbose_name='Слушатель')),
            ],
        ),
        migrations.AddIndex(
            model_name='musicalbum',
            index=django.contrib.postgres.indexes.BrinIndex(fields=['created'], name='music_music_created_2afe02_brin'),
        ),
        migrations.AddIndex(
            model_name='music',
            index=django.contrib.postgres.indexes.BrinIndex(fields=['created'], name='music_music_created_577adb_brin'),
        ),
    ]
