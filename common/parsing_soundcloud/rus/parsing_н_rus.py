
# -*- coding: utf-8 -*-
from locale import *
import sys,os

project_dir = '../tr/tr/'

sys.path.append(project_dir)
os.environ['DJANGO_SETTINGS_MODULE'] = 'settings'
import django
django.setup()

import soundcloud
from music.models import *
from datetime import datetime, date, time


client = soundcloud.Client(client_id='dce5652caa1b66331903493735ddd64d')
page_size = 200
genres_list = SoundGenres.objects.values('name')
genres_list_names = [name['name'] for name in genres_list]

н_rus_list_1 = [
"Н. Паганини",
"Н.А.О.М.И.",
"Н.И.Н.А.",
"Н.П.М. (ЦАО) feat. Sostvola",
"На-На",
"НаZима",
"Наадя",
"Навколо Кола",
"Навстречу Солнцу",
"Нагваль",
"Нагора",
"Надежда Ангарская",
"Надежда Бабкина",
"Надежда Грановская",
"Надежда Гуськова",
"Надежда Кадышева",
"Надежда Мейхер",
"Надежда Меньших",
"Надежда Придёт",
"Надежда Рутман",
"Надежда Тэра",
"Надежда Чепрага",
"Надежда Шестак",
"Надія Гураль",
"Надюля feat. Dj Pill.One",
"Надя L.E.X.",
"Надя Горячева",
"Надя Дорофеева и Настя Каменских",
"Надя Кодес",
"Надя Ручка",
"Назар",
"Назар Рад & Fuze feat. Лина Мицуки",
"Називний Відмінок",
"Наив",
"Наиль Манасипов",
"Найк Борзов",
"Найк Борзов и Линда",
"Найт",
"Найт (NY Family) feat. Ай-Q",
"Накуражах",
"Намо Миниган",
"Нани Бергвадзе",
"Нани Брегвадзе",
"Наргиз",
"Наркис",
"Насморк",
"Настасья Самбурская",
"Настя Годунова",
"Настя Гонцул",
"Настя Дементьева",
"Настя Задорожная",
"Настя Задорожная и Александр Кривошапко",
"Настя Казаку",
"Настя Каменских",
"Настя Карпова",
"Настя Космос",
"Настя Кочеткова",
"Настя Крайнова",
"Настя Кудри",
"Настя Кудри feat. Кравц",
"Настя Лиса",
"Настя Любимова",
"Настя Макаревич & Лицей",
"Настя Мальцева feat. Mafak",
"Настя Нижник",
"Настя Новикова",
"Настя Приходько",
"Настя Рыбка",
"Настя Сычёва",
"Настя Яворская",
"Настя Ясна & Scruche",
"Настя Ясная",
"Настя Ястржембская",
"Натали и Николай Басков",
"Натали и Юлия Началова",]

н_rus_list_2 = [
"Натали Локс & Дмитрий Прянов",
"Натали Янковских",
"Наталия Власова",
"Наталия Гордановская",
"Наталия Гулькина",
"Наталия Иванова",
"Наталия Калюжная",
"Наталия Старинская",
"Наталия Треф",
"НатаЛі",
"Наталка Карпа",
"Наталья Sоловей",
"Наталья Агальцова",
"Наталья Бантеева feat. Loc Dog",
"Наталья Бардо",
"Наталья Бочкарева",
"Наталья Бучинская",
"Наталья Валевская",
"Наталья Ветлицкая",
"Наталья Власова",
"Наталья Вовк",
"Наталья Гордиенко",
"Наталья Гулькина",
"Наталья Кавказьева",
"Наталья Королёва",
"Наталья Кочеткова",
"Наталья Крикун",
"Наталья Любарова",
"Наталья Матроскина",
"Наталья Могилевская",
"Наталья Морозова",
"Наталья Нейт",
"Наталья Новикова & D.I.P Project",
"Наталья Онегина",
"Наталья Паволоцкая",
"Наталья Папазоглу",
"Наталья Подольская",
"Наталья Пугачева",
"Наталья Райская",
"Наталья Родина",
"Наталья Сенчукова",
"Наталья Тимофеева",
"Наталья Тумшевиц",
"Наталья Фирсанова и Влад Топалов",
"Наталья Цупа",
"Наталья Шайдурова",
"Наталья Шевченко",
"Наталья Штерн",
"Натана",
"Натаника",
"Наташа Богацкая",
"Наташа Богданова",
"Наташа Власова",
"Наташа Галич",
"Наташа Губич",
"Наташа Королёва",
"Наташа Корс",
"Наташа Ласка",
"Наташа Паталахова",
"Наташа Строгая feat. Балаган Лимитед",
"Наташа Турбина",
"Натив",
"Наум Блик",
"Наутилус Помпилиус",
"Нафиса Старкова",
"Наш Город",
"НашеVremя",
"Нашествие Кактусов",
"НБ feat. SvetlaYa",
"Не Будите Спящих",
"Не Ваше Дело Records",
"Не Люди",
"Не Спать",
"Не стрелки",
"НЕ.KURILI",]

н_rus_list_3 = [
"НеHardwell & Joey Dale feat. Luciana",
"НеАдекватный feat. Мэt & Adamant",
"НеАнгелы",
"НеАнгелы и A-Dessa",
"Небеса обетованные",
"НебуНеДоТебя",
"НЕвесьЯ",
"Невидимка",
"неВМоде",
"Нежный Возраст",
"Нежный Тон feat. Андрей Запал",
"Нежный Яд",
"Независимое Мнение",
"Неигрушки",
"Нейна",
"Некто Космический",
"Нелли Мотяева",
"Нелли Чобану",
"Нелюбовь",
"Немалый Бизнес",
"НеОбратимый",
"Непара",
"непоГОСТу",
"Непрникосновенный",
"Непростые",
"Нервы",
"Несолнце",
"НеСтрелки",
"Несчастный Случай",
"НетСмысла",
"Неуловимые мстители",
"Неуслышанный",
"Неформат",
"Нефтеград",
"Нигатив (Триада)",
"Ниита Хазановский",
"Ник Воскресенский",
"Ника feat. Роман Верба",
"Ника Баринова",
"Ника Новгородцева",
"Никита M-Town",
"Никита Storm & Максим One",
"Никита Tako",
"Никита Брейдкас",
"Никита Васильев",
"Никита Вишнев",
"Никита Горюк",
"Никита Киселев",
"Никита Козенков",
"Никита Кунов",
"Никита Ломакин",
"Никита Лях",
"Никита Малинин",
"Никита Михалков",
"Никита ОктябрЪ",
"Никита Песня",
"Никита Пресняков",
"Никита Фомин",
"Никита Хазановский",
"Никки & Olya G",
"Нико ЛайТ (Николай Тимофеев)",
"Нико Неман",
"Никола Питерский",
"Николаев Игорь",
"Николай Агаркин",
"Николай Адамов",
"Николай Бандурин",
"Николай Басков",
"Николай Белов feat. Мафик",
"Николай Васильев",
"Николай Воронцов",]

н_rus_list_4 = [
"Николай Гедда",
"Николай Гнатюк",
"Николай Должанский & Екатерина Тумаева",
"Николай Емелин",
"Николай Зайцев",
"Николай Замковец",
"Николай Искуснов",
"Николай Караченцев",
"Николай Малиновский",
"Николай Носков",
"Николай Озеров",
"Николай Попов и Инна Пономаренко",
"Николай Расторгуев",
"Николай Рыбников",
"Николай Садовый",
"Николай Сличенко",
"Николай Соловьёв",
"Николай Тимофеев",
"Николай Тимохин",
"Николай Трубач",
"Николай Фоменко",
"Николай Халабуда",
"Николай Хнаев",
"Николай Чурбаков",
"Николай Шевцов",
"Николай Шинкаренко",
"Николай Шишкин",
"Николай Эрденко",
"Николай Юхименко",
"НиколАос feat. Кристина",
"Николас Кельм",
"Николо Петраш",
"Николь Ю",
"Нина Бродская",
"Нина Вольт",
"Нина Матвиенко",
"Нина Орлова",
"Нина Пантелеева",
"Нина Ургант",
"Нина Шацкая",
"Нино Портелли",
"НичегоЛичного & Настя Сергеева",
"НичегоЛичного feat. Boris (НПМ)",
"Ніколас Тім",
"Новелла Матвеева",
"Новикова Маша",
"Новые Амазонки",
"Новые Валторны",
"Новые Ворота",
"Новые Формы",
"Ногу Свело",
"Нодар Ревия",
"Ноль",
"НоМо",
"НоНо",
"Норд",
"Ноунэйм",
"Ночное Движение Project",
"Ночное Рандеву",
"Ночной Патруль",
"Нужный Ритм",
"Нуки",
"Нумер 482",
"Нурахмед Есмухамбетов",
"Нури Ягъяев",
"Нурианна Каллаева",
"Нэлли Мотяева",
"Нэмо & Берти",
"Нэнси",
"Нюша",
]

litera = SoundSymbol.objects.get(name="Н")

count = 0

for tag in н_rus_list_1:
    tracks = client.get('/tracks', q=tag, limit=page_size, linked_partitioning=1)
    if tracks:
        for track in tracks.collection:
            created_at = track.created_at
            created_at = datetime.strptime('Jun 1 2005  1:33PM', '%b %d %Y %I:%M%p')
            if track.description:
                description = track.description[:500]
            else:
                description=None
            try:
                Music.objects.get(id=track.id)
            except:
                if track.genre and track.release_year and track.duration > 90000 and track.genre in genres_list_names:
                    try:
                        self_tag = SoundTags.objects.get(name=tag, symbol=litera)
                    except:
                        self_tag = SoundTags.objects.create(name=tag, symbol=litera)
                    genre =SoundGenres.objects.get(name=track.genre.replace("'", '') )
                    new_track = Music.objects.create(id=track.id, tag=self_tag, artwork_url=track.artwork_url, created_at=created_at, duration=track.duration, genre=genre, description=description, title=track.title, uri=track.uri, release_year=track.release_year)
                count = count + 1
        while tracks.next_href != None and count < 2000:
            tracks = client.get(tracks.next_href, limit=page_size, linked_partitioning=1)
            for track in tracks.collection:
                created_at = track.created_at
                created_at = datetime.strptime('Jun 1 2005  1:33PM', '%b %d %Y %I:%M%p')
                if track.description:
                    description = track.description[:500]
                else:
                    description=None
                try:
                    Music.objects.get(id=track.id)
                except:
                    if track.genre and track.release_year and track.duration > 90000 and track.genre in genres_list_names:
                        try:
                            self_tag = SoundTags.objects.get(name=tag, symbol=litera)
                        except:
                            self_tag = SoundTags.objects.create(name=tag, symbol=litera)
                        genre =SoundGenres.objects.get(name=track.genre.replace("'", '') )
                        new_track = Music.objects.create(id=track.id, tag=self_tag, artwork_url=track.artwork_url, created_at=created_at, duration=track.duration, genre=genre, description=description, title=track.title, uri=track.uri, release_year=track.release_year)
                    count = count + 1
