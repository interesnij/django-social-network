# Generated by Django 3.2 on 2021-07-21 14:49

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0011_auto_20210721_1157'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserGoodAddCommentExcludes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner', models.PositiveIntegerField(default=0, verbose_name='id назначателя')),
                ('user', models.PositiveIntegerField(default=0, verbose_name='id пользователя')),
            ],
        ),
        migrations.CreateModel(
            name='UserGoodAddCommentIncludes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner', models.PositiveIntegerField(default=0, verbose_name='id назначателя')),
                ('user', models.PositiveIntegerField(default=0, verbose_name='id пользователя')),
            ],
        ),
        migrations.CreateModel(
            name='UserGoodAddItemExcludes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner', models.PositiveIntegerField(default=0, verbose_name='id назначателя')),
                ('user', models.PositiveIntegerField(default=0, verbose_name='id пользователя')),
            ],
        ),
        migrations.CreateModel(
            name='UserGoodAddItemIncludes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner', models.PositiveIntegerField(default=0, verbose_name='id назначателя')),
                ('user', models.PositiveIntegerField(default=0, verbose_name='id пользователя')),
            ],
        ),
        migrations.CreateModel(
            name='UserGoodCanSeeCommentExcludes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner', models.PositiveIntegerField(default=0, verbose_name='id назначателя')),
                ('user', models.PositiveIntegerField(default=0, verbose_name='id пользователя')),
            ],
        ),
        migrations.CreateModel(
            name='UserGoodCanSeeCommentIncludes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner', models.PositiveIntegerField(default=0, verbose_name='id назначателя')),
                ('user', models.PositiveIntegerField(default=0, verbose_name='id пользователя')),
            ],
        ),
        migrations.CreateModel(
            name='UserGoodCanSeeMarketExcludes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner', models.PositiveIntegerField(default=0, verbose_name='id назначателя')),
                ('user', models.PositiveIntegerField(default=0, verbose_name='id пользователя')),
            ],
        ),
        migrations.CreateModel(
            name='UserGoodCanSeeMarketIncludes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner', models.PositiveIntegerField(default=0, verbose_name='id назначателя')),
                ('user', models.PositiveIntegerField(default=0, verbose_name='id пользователя')),
            ],
        ),
        migrations.CreateModel(
            name='UserMusicAddItemExcludes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner', models.PositiveIntegerField(default=0, verbose_name='id назначателя')),
                ('user', models.PositiveIntegerField(default=0, verbose_name='id пользователя')),
            ],
        ),
        migrations.CreateModel(
            name='UserMusicAddItemIncludes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner', models.PositiveIntegerField(default=0, verbose_name='id назначателя')),
                ('user', models.PositiveIntegerField(default=0, verbose_name='id пользователя')),
            ],
        ),
        migrations.CreateModel(
            name='UserMusicCanSeeMusicExcludes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner', models.PositiveIntegerField(default=0, verbose_name='id назначателя')),
                ('user', models.PositiveIntegerField(default=0, verbose_name='id пользователя')),
            ],
        ),
        migrations.CreateModel(
            name='UserMusicCanSeeMusicIncludes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner', models.PositiveIntegerField(default=0, verbose_name='id назначателя')),
                ('user', models.PositiveIntegerField(default=0, verbose_name='id пользователя')),
            ],
        ),
        migrations.CreateModel(
            name='UserPhotoAddCommentExcludes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner', models.PositiveIntegerField(default=0, verbose_name='id назначателя')),
                ('user', models.PositiveIntegerField(default=0, verbose_name='id пользователя')),
            ],
        ),
        migrations.CreateModel(
            name='UserPhotoAddCommentIncludes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner', models.PositiveIntegerField(default=0, verbose_name='id назначателя')),
                ('user', models.PositiveIntegerField(default=0, verbose_name='id пользователя')),
            ],
        ),
        migrations.CreateModel(
            name='UserPhotoAddItemExcludes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner', models.PositiveIntegerField(default=0, verbose_name='id назначателя')),
                ('user', models.PositiveIntegerField(default=0, verbose_name='id пользователя')),
            ],
        ),
        migrations.CreateModel(
            name='UserPhotoAddItemIncludes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner', models.PositiveIntegerField(default=0, verbose_name='id назначателя')),
                ('user', models.PositiveIntegerField(default=0, verbose_name='id пользователя')),
            ],
        ),
        migrations.CreateModel(
            name='UserPhotoCanSeeCommentExcludes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner', models.PositiveIntegerField(default=0, verbose_name='id назначателя')),
                ('user', models.PositiveIntegerField(default=0, verbose_name='id пользователя')),
            ],
        ),
        migrations.CreateModel(
            name='UserPhotoCanSeeCommentIncludes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner', models.PositiveIntegerField(default=0, verbose_name='id назначателя')),
                ('user', models.PositiveIntegerField(default=0, verbose_name='id пользователя')),
            ],
        ),
        migrations.CreateModel(
            name='UserPhotoCanSeeGalleryExcludes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner', models.PositiveIntegerField(default=0, verbose_name='id назначателя')),
                ('user', models.PositiveIntegerField(default=0, verbose_name='id пользователя')),
            ],
        ),
        migrations.CreateModel(
            name='UserPhotoCanSeeGalleryIncludes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner', models.PositiveIntegerField(default=0, verbose_name='id назначателя')),
                ('user', models.PositiveIntegerField(default=0, verbose_name='id пользователя')),
            ],
        ),
        migrations.CreateModel(
            name='UserPlannerCanSeeBoardsExcludes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner', models.PositiveIntegerField(default=0, verbose_name='id назначателя')),
                ('user', models.PositiveIntegerField(default=0, verbose_name='id пользователя')),
            ],
        ),
        migrations.CreateModel(
            name='UserPlannerCanSeeBoardsIncludes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner', models.PositiveIntegerField(default=0, verbose_name='id назначателя')),
                ('user', models.PositiveIntegerField(default=0, verbose_name='id пользователя')),
            ],
        ),
        migrations.CreateModel(
            name='UserPlannerCanSeeCardsExcludes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner', models.PositiveIntegerField(default=0, verbose_name='id назначателя')),
                ('user', models.PositiveIntegerField(default=0, verbose_name='id пользователя')),
            ],
        ),
        migrations.CreateModel(
            name='UserPlannerCanSeeCardsIncludes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner', models.PositiveIntegerField(default=0, verbose_name='id назначателя')),
                ('user', models.PositiveIntegerField(default=0, verbose_name='id пользователя')),
            ],
        ),
        migrations.CreateModel(
            name='UserPlannerCanSeeCommentsExcludes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner', models.PositiveIntegerField(default=0, verbose_name='id назначателя')),
                ('user', models.PositiveIntegerField(default=0, verbose_name='id пользователя')),
            ],
        ),
        migrations.CreateModel(
            name='UserPlannerCanSeeCommentsIncludes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner', models.PositiveIntegerField(default=0, verbose_name='id назначателя')),
                ('user', models.PositiveIntegerField(default=0, verbose_name='id пользователя')),
            ],
        ),
        migrations.CreateModel(
            name='UserPlannerCanSeeWorkspacesExcludes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner', models.PositiveIntegerField(default=0, verbose_name='id назначателя')),
                ('user', models.PositiveIntegerField(default=0, verbose_name='id пользователя')),
            ],
        ),
        migrations.CreateModel(
            name='UserPlannerCanSeeWorkspacesIncludes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner', models.PositiveIntegerField(default=0, verbose_name='id назначателя')),
                ('user', models.PositiveIntegerField(default=0, verbose_name='id пользователя')),
            ],
        ),
        migrations.CreateModel(
            name='UserPostAddCommentExcludes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner', models.PositiveIntegerField(default=0, verbose_name='id назначателя')),
                ('user', models.PositiveIntegerField(default=0, verbose_name='id пользователя')),
            ],
        ),
        migrations.CreateModel(
            name='UserPostAddCommentIncludes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner', models.PositiveIntegerField(default=0, verbose_name='id назначателя')),
                ('user', models.PositiveIntegerField(default=0, verbose_name='id пользователя')),
            ],
        ),
        migrations.CreateModel(
            name='UserPostAddItemExcludes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner', models.PositiveIntegerField(default=0, verbose_name='id назначателя')),
                ('user', models.PositiveIntegerField(default=0, verbose_name='id пользователя')),
            ],
        ),
        migrations.CreateModel(
            name='UserPostAddItemIncludes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner', models.PositiveIntegerField(default=0, verbose_name='id назначателя')),
                ('user', models.PositiveIntegerField(default=0, verbose_name='id пользователя')),
            ],
        ),
        migrations.CreateModel(
            name='UserPostCanSeeCommentExcludes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner', models.PositiveIntegerField(default=0, verbose_name='id назначателя')),
                ('user', models.PositiveIntegerField(default=0, verbose_name='id пользователя')),
            ],
        ),
        migrations.CreateModel(
            name='UserPostCanSeeCommentIncludes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner', models.PositiveIntegerField(default=0, verbose_name='id назначателя')),
                ('user', models.PositiveIntegerField(default=0, verbose_name='id пользователя')),
            ],
        ),
        migrations.CreateModel(
            name='UserPostCanSeeWallExcludes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner', models.PositiveIntegerField(default=0, verbose_name='id назначателя')),
                ('user', models.PositiveIntegerField(default=0, verbose_name='id пользователя')),
            ],
        ),
        migrations.CreateModel(
            name='UserPostCanSeeWallIncludes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner', models.PositiveIntegerField(default=0, verbose_name='id назначателя')),
                ('user', models.PositiveIntegerField(default=0, verbose_name='id пользователя')),
            ],
        ),
        migrations.CreateModel(
            name='UserPrivatePlanner',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='user_private_planner', serialize=False, to='users.user', verbose_name='Пользователь')),
                ('can_see_comments', models.CharField(choices=[('AC', 'Все пользователи'), ('M', 'Участники пространства или доски'), ('F', 'Друзья'), ('EO', 'Друзья и друзья друзей'), ('Y', 'Только я'), ('FB', 'Друзья, кроме'), ('SF', 'Некоторые друзья'), ('MB', 'Участники, кроме'), ('SM', 'Некоторые участники')], default='M', max_length=2, verbose_name='Кто видит комментарии')),
                ('add_comments', models.CharField(choices=[('AC', 'Все пользователи'), ('M', 'Участники пространства или доски'), ('F', 'Друзья'), ('EO', 'Друзья и друзья друзей'), ('Y', 'Только я'), ('FB', 'Друзья, кроме'), ('SF', 'Некоторые друзья'), ('MB', 'Участники, кроме'), ('SM', 'Некоторые участники')], default='F', max_length=2, verbose_name='Кто добавляет комментарии')),
                ('vote_on', models.BooleanField(default=True, verbose_name='Реакции разрешены')),
            ],
        ),
        migrations.CreateModel(
            name='UserVideoAddCommentExcludes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner', models.PositiveIntegerField(default=0, verbose_name='id назначателя')),
                ('user', models.PositiveIntegerField(default=0, verbose_name='id пользователя')),
            ],
        ),
        migrations.CreateModel(
            name='UserVideoAddCommentIncludes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner', models.PositiveIntegerField(default=0, verbose_name='id назначателя')),
                ('user', models.PositiveIntegerField(default=0, verbose_name='id пользователя')),
            ],
        ),
        migrations.CreateModel(
            name='UserVideoAddItemExcludes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner', models.PositiveIntegerField(default=0, verbose_name='id назначателя')),
                ('user', models.PositiveIntegerField(default=0, verbose_name='id пользователя')),
            ],
        ),
        migrations.CreateModel(
            name='UserVideoAddItemIncludes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner', models.PositiveIntegerField(default=0, verbose_name='id назначателя')),
                ('user', models.PositiveIntegerField(default=0, verbose_name='id пользователя')),
            ],
        ),
        migrations.CreateModel(
            name='UserVideoCanSeeCommentExcludes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner', models.PositiveIntegerField(default=0, verbose_name='id назначателя')),
                ('user', models.PositiveIntegerField(default=0, verbose_name='id пользователя')),
            ],
        ),
        migrations.CreateModel(
            name='UserVideoCanSeeCommentIncludes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner', models.PositiveIntegerField(default=0, verbose_name='id назначателя')),
                ('user', models.PositiveIntegerField(default=0, verbose_name='id пользователя')),
            ],
        ),
        migrations.CreateModel(
            name='UserVideoCanSeeVideoExcludes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner', models.PositiveIntegerField(default=0, verbose_name='id назначателя')),
                ('user', models.PositiveIntegerField(default=0, verbose_name='id пользователя')),
            ],
        ),
        migrations.CreateModel(
            name='UserVideoCanSeeVideoIncludes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner', models.PositiveIntegerField(default=0, verbose_name='id назначателя')),
                ('user', models.PositiveIntegerField(default=0, verbose_name='id пользователя')),
            ],
        ),
        migrations.RemoveField(
            model_name='userprivate',
            name='community',
        ),
        migrations.RemoveField(
            model_name='userprivate',
            name='friends',
        ),
        migrations.RemoveField(
            model_name='userprivate',
            name='message',
        ),
        migrations.RemoveField(
            model_name='userprivategood',
            name='comment',
        ),
        migrations.RemoveField(
            model_name='userprivategood',
            name='good',
        ),
        migrations.RemoveField(
            model_name='userprivategood',
            name='see',
        ),
        migrations.RemoveField(
            model_name='userprivategood',
            name='votes',
        ),
        migrations.RemoveField(
            model_name='userprivatemusic',
            name='music',
        ),
        migrations.RemoveField(
            model_name='userprivatemusic',
            name='see',
        ),
        migrations.RemoveField(
            model_name='userprivatephoto',
            name='comment',
        ),
        migrations.RemoveField(
            model_name='userprivatephoto',
            name='photo',
        ),
        migrations.RemoveField(
            model_name='userprivatephoto',
            name='see',
        ),
        migrations.RemoveField(
            model_name='userprivatephoto',
            name='votes',
        ),
        migrations.RemoveField(
            model_name='userprivatepost',
            name='comment',
        ),
        migrations.RemoveField(
            model_name='userprivatepost',
            name='see',
        ),
        migrations.RemoveField(
            model_name='userprivatepost',
            name='votes',
        ),
        migrations.RemoveField(
            model_name='userprivatepost',
            name='wall',
        ),
        migrations.RemoveField(
            model_name='userprivatevideo',
            name='comment',
        ),
        migrations.RemoveField(
            model_name='userprivatevideo',
            name='see',
        ),
        migrations.RemoveField(
            model_name='userprivatevideo',
            name='video',
        ),
        migrations.RemoveField(
            model_name='userprivatevideo',
            name='votes',
        ),
        migrations.AddField(
            model_name='userprivate',
            name='can_see_boards',
            field=models.CharField(choices=[('AC', 'Все пользователи'), ('M', 'Участники пространства или доски'), ('F', 'Друзья'), ('EO', 'Друзья и друзья друзей'), ('Y', 'Только я'), ('FB', 'Друзья, кроме'), ('SF', 'Некоторые друзья'), ('MB', 'Участники, кроме'), ('SM', 'Некоторые участники')], default='M', max_length=2, verbose_name='Кто видит доски'),
        ),
        migrations.AddField(
            model_name='userprivate',
            name='can_see_community',
            field=models.CharField(choices=[('AC', 'Все пользователи'), ('F', 'Друзья'), ('EO', 'Друзья и друзья друзей'), ('Y', 'Только я'), ('FB', 'Друзья, кроме'), ('SF', 'Некоторые друзья')], default='AC', max_length=2, verbose_name='Кто видит сообщества'),
        ),
        migrations.AddField(
            model_name='userprivate',
            name='can_see_friends',
            field=models.CharField(choices=[('AC', 'Все пользователи'), ('F', 'Друзья'), ('EO', 'Друзья и друзья друзей'), ('Y', 'Только я'), ('FB', 'Друзья, кроме'), ('SF', 'Некоторые друзья')], default='AC', max_length=2, verbose_name='Кто видит друзей'),
        ),
        migrations.AddField(
            model_name='userprivate',
            name='can_see_good',
            field=models.CharField(choices=[('AC', 'Все пользователи'), ('F', 'Друзья'), ('EO', 'Друзья и друзья друзей'), ('Y', 'Только я'), ('FB', 'Друзья, кроме'), ('SF', 'Некоторые друзья')], default='AC', max_length=2, verbose_name='Кто пишет сообщения'),
        ),
        migrations.AddField(
            model_name='userprivate',
            name='can_see_message',
            field=models.CharField(choices=[('AC', 'Все пользователи'), ('F', 'Друзья'), ('EO', 'Друзья и друзья друзей'), ('Y', 'Только я'), ('FB', 'Друзья, кроме'), ('SF', 'Некоторые друзья')], default='AC', max_length=2, verbose_name='Кто пишет сообщения'),
        ),
        migrations.AddField(
            model_name='userprivate',
            name='can_see_music',
            field=models.CharField(choices=[('AC', 'Все пользователи'), ('F', 'Друзья'), ('EO', 'Друзья и друзья друзей'), ('Y', 'Только я'), ('FB', 'Друзья, кроме'), ('SF', 'Некоторые друзья')], default='AC', max_length=2, verbose_name='Кто пишет сообщения'),
        ),
        migrations.AddField(
            model_name='userprivate',
            name='can_see_photo',
            field=models.CharField(choices=[('AC', 'Все пользователи'), ('F', 'Друзья'), ('EO', 'Друзья и друзья друзей'), ('Y', 'Только я'), ('FB', 'Друзья, кроме'), ('SF', 'Некоторые друзья')], default='AC', max_length=2, verbose_name='Кто пишет сообщения'),
        ),
        migrations.AddField(
            model_name='userprivate',
            name='can_see_post',
            field=models.CharField(choices=[('AC', 'Все пользователи'), ('F', 'Друзья'), ('EO', 'Друзья и друзья друзей'), ('Y', 'Только я'), ('FB', 'Друзья, кроме'), ('SF', 'Некоторые друзья')], default='AC', max_length=2, verbose_name='Кто видит стену'),
        ),
        migrations.AddField(
            model_name='userprivate',
            name='can_see_video',
            field=models.CharField(choices=[('AC', 'Все пользователи'), ('F', 'Друзья'), ('EO', 'Друзья и друзья друзей'), ('Y', 'Только я'), ('FB', 'Друзья, кроме'), ('SF', 'Некоторые друзья')], default='AC', max_length=2, verbose_name='Кто пишет сообщения'),
        ),
        migrations.AddField(
            model_name='userprivate',
            name='can_see_workspaces',
            field=models.CharField(choices=[('AC', 'Все пользователи'), ('M', 'Участники пространства или доски'), ('F', 'Друзья'), ('EO', 'Друзья и друзья друзей'), ('Y', 'Только я'), ('FB', 'Друзья, кроме'), ('SF', 'Некоторые друзья'), ('MB', 'Участники, кроме'), ('SM', 'Некоторые участники')], default='M', max_length=2, verbose_name='Кто видит рабочие пространства и весь раздел'),
        ),
        migrations.AddField(
            model_name='userprivategood',
            name='add_comment',
            field=models.CharField(choices=[('AC', 'Все пользователи'), ('F', 'Друзья'), ('EO', 'Друзья и друзья друзей'), ('Y', 'Только я'), ('AB', 'Друзья, кроме'), ('SF', 'Некоторые друзья')], default='AC', max_length=2, verbose_name='Кто пишет комментарии'),
        ),
        migrations.AddField(
            model_name='userprivategood',
            name='add_item',
            field=models.CharField(choices=[('AC', 'Все пользователи'), ('F', 'Друзья'), ('EO', 'Друзья и друзья друзей'), ('Y', 'Только я'), ('AB', 'Друзья, кроме'), ('SF', 'Некоторые друзья')], default='Y', max_length=2, verbose_name='Кто добавляет товары и потом с этими товарами работает'),
        ),
        migrations.AddField(
            model_name='userprivategood',
            name='can_see_comment',
            field=models.CharField(choices=[('AC', 'Все пользователи'), ('F', 'Друзья'), ('EO', 'Друзья и друзья друзей'), ('Y', 'Только я'), ('AB', 'Друзья, кроме'), ('SF', 'Некоторые друзья')], default='AC', max_length=5, verbose_name='Кто видит комментарии'),
        ),
        migrations.AddField(
            model_name='userprivategood',
            name='vote_on',
            field=models.BooleanField(default=True, verbose_name='Реакции разрешены'),
        ),
        migrations.AddField(
            model_name='userprivatemusic',
            name='add_item',
            field=models.CharField(choices=[('AC', 'Все пользователи'), ('F', 'Друзья'), ('EO', 'Друзья и друзья друзей'), ('Y', 'Только я'), ('AB', 'Друзья, кроме'), ('SF', 'Некоторые друзья')], default='Y', max_length=2, verbose_name='Кто добавляет записи и потом с этими аудиозаписями работает'),
        ),
        migrations.AddField(
            model_name='userprivatephoto',
            name='add_comment',
            field=models.CharField(choices=[('AC', 'Все пользователи'), ('F', 'Друзья'), ('EO', 'Друзья и друзья друзей'), ('Y', 'Только я'), ('AB', 'Друзья, кроме'), ('SF', 'Некоторые друзья')], default='AC', max_length=5, verbose_name='Кто пишет комментарии'),
        ),
        migrations.AddField(
            model_name='userprivatephoto',
            name='add_item',
            field=models.CharField(choices=[('AC', 'Все пользователи'), ('F', 'Друзья'), ('EO', 'Друзья и друзья друзей'), ('Y', 'Только я'), ('AB', 'Друзья, кроме'), ('SF', 'Некоторые друзья')], default='Y', max_length=5, verbose_name='Кто добавляет фотографии и потом с этими фотографями работает'),
        ),
        migrations.AddField(
            model_name='userprivatephoto',
            name='can_see_comment',
            field=models.CharField(choices=[('AC', 'Все пользователи'), ('F', 'Друзья'), ('EO', 'Друзья и друзья друзей'), ('Y', 'Только я'), ('AB', 'Друзья, кроме'), ('SF', 'Некоторые друзья')], default='AC', max_length=5, verbose_name='Кто видит комментарии'),
        ),
        migrations.AddField(
            model_name='userprivatephoto',
            name='vote_on',
            field=models.BooleanField(default=True, verbose_name='Реакции разрешены'),
        ),
        migrations.AddField(
            model_name='userprivatepost',
            name='add_comment',
            field=models.CharField(choices=[('AC', 'Все пользователи'), ('F', 'Друзья'), ('EO', 'Друзья и друзья друзей'), ('Y', 'Только я'), ('AB', 'Друзья, кроме'), ('SF', 'Некоторые друзья')], default='AC', max_length=5, verbose_name='Кто пишет комментарии'),
        ),
        migrations.AddField(
            model_name='userprivatepost',
            name='add_item',
            field=models.CharField(choices=[('AC', 'Все пользователи'), ('F', 'Друзья'), ('EO', 'Друзья и друзья друзей'), ('Y', 'Только я'), ('AB', 'Друзья, кроме'), ('SF', 'Некоторые друзья')], default='Y', max_length=5, verbose_name='Кто добавляет записи и потом с этими записями работает'),
        ),
        migrations.AddField(
            model_name='userprivatepost',
            name='can_see_comment',
            field=models.CharField(choices=[('AC', 'Все пользователи'), ('F', 'Друзья'), ('EO', 'Друзья и друзья друзей'), ('Y', 'Только я'), ('AB', 'Друзья, кроме'), ('SF', 'Некоторые друзья')], default='AC', max_length=5, verbose_name='Кто видит комментарии'),
        ),
        migrations.AddField(
            model_name='userprivatepost',
            name='vote_on',
            field=models.BooleanField(default=True, verbose_name='Реакции разрешены'),
        ),
        migrations.AddField(
            model_name='userprivatevideo',
            name='add_comment',
            field=models.CharField(choices=[('AC', 'Все пользователи'), ('F', 'Друзья'), ('EO', 'Друзья и друзья друзей'), ('Y', 'Только я'), ('AB', 'Друзья, кроме'), ('SF', 'Некоторые друзья')], default='AC', max_length=2, verbose_name='Кто пишет комментарии'),
        ),
        migrations.AddField(
            model_name='userprivatevideo',
            name='add_item',
            field=models.CharField(choices=[('AC', 'Все пользователи'), ('F', 'Друзья'), ('EO', 'Друзья и друзья друзей'), ('Y', 'Только я'), ('AB', 'Друзья, кроме'), ('SF', 'Некоторые друзья')], default='Y', max_length=2, verbose_name='Кто добавляет ролики и потом с этими роликами работает'),
        ),
        migrations.AddField(
            model_name='userprivatevideo',
            name='can_see_comment',
            field=models.CharField(choices=[('AC', 'Все пользователи'), ('F', 'Друзья'), ('EO', 'Друзья и друзья друзей'), ('Y', 'Только я'), ('AB', 'Друзья, кроме'), ('SF', 'Некоторые друзья')], default='AC', max_length=5, verbose_name='Кто видит комментарии'),
        ),
        migrations.AddField(
            model_name='userprivatevideo',
            name='vote_on',
            field=models.BooleanField(default=True, verbose_name='Реакции разрешены'),
        ),
    ]
