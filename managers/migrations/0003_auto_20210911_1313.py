# Generated by Django 3.2 on 2021-09-11 13:13

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('managers', '0002_auto_20210506_1955'),
    ]

    operations = [
        migrations.CreateModel(
            name='ArticleUserStaff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.PositiveSmallIntegerField(choices=[(1, 'Администратор'), (4, 'Модератор'), (2, 'Редактор'), (3, 'Рекламодатель')], default=0, verbose_name='Уровень доступа')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='article_user_staff', to=settings.AUTH_USER_MODEL, verbose_name='Особый пользователь')),
            ],
            options={
                'verbose_name': 'Полномочия в статьях',
                'verbose_name_plural': 'Полномочия в статьях',
            },
        ),
        migrations.CreateModel(
            name='CanWorkStaffArticleUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('can_work_administrator', models.BooleanField(default=False, verbose_name='Может добавлять администраторов в статьях')),
                ('can_work_moderator', models.BooleanField(default=False, verbose_name='Может добавлять модераторов в статьях')),
                ('can_work_editor', models.BooleanField(default=False, verbose_name='Может добавлять редакторов в статьях')),
                ('can_work_advertiser', models.BooleanField(default=False, verbose_name='Может добавлять рекламодателей в статьях')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='can_work_staff_article_user', to=settings.AUTH_USER_MODEL, verbose_name='Создатель персонала в статьях')),
            ],
            options={
                'verbose_name': 'Создатель персонала в статьях',
                'verbose_name_plural': 'Создатели персонала в статьях',
            },
        ),
        migrations.CreateModel(
            name='CanWorkStaffForumUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('can_work_administrator', models.BooleanField(default=False, verbose_name='Может добавлять администраторов в форуме')),
                ('can_work_moderator', models.BooleanField(default=False, verbose_name='Может добавлять модераторов в форуме')),
                ('can_work_editor', models.BooleanField(default=False, verbose_name='Может добавлять редакторов в форуме')),
                ('can_work_advertiser', models.BooleanField(default=False, verbose_name='Может добавлять рекламодателей в форуме')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='can_work_staff_forum_user', to=settings.AUTH_USER_MODEL, verbose_name='Создатель персонала в форуме')),
            ],
            options={
                'verbose_name': 'Создатель персонала в форуме',
                'verbose_name_plural': 'Создатели персонала в форуме',
            },
        ),
        migrations.CreateModel(
            name='CanWorkStaffMailUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('can_work_administrator', models.BooleanField(default=False, verbose_name='Может добавлять администраторов в почте')),
                ('can_work_moderator', models.BooleanField(default=False, verbose_name='Может добавлять модераторов в почте')),
                ('can_work_editor', models.BooleanField(default=False, verbose_name='Может добавлять редакторов в почте')),
                ('can_work_advertiser', models.BooleanField(default=False, verbose_name='Может добавлять рекламодателей в почте')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='can_work_staff_mail_user', to=settings.AUTH_USER_MODEL, verbose_name='Создатель персонала в почте')),
            ],
            options={
                'verbose_name': 'Создатель персонала в почте',
                'verbose_name_plural': 'Создатели персонала в почте',
            },
        ),
        migrations.CreateModel(
            name='CanWorkStaffMessageUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('can_work_administrator', models.BooleanField(default=False, verbose_name='Может добавлять администраторов в сообщениях')),
                ('can_work_moderator', models.BooleanField(default=False, verbose_name='Может добавлять модераторов в сообщениях')),
                ('can_work_editor', models.BooleanField(default=False, verbose_name='Может добавлять редакторов в сообщениях')),
                ('can_work_advertiser', models.BooleanField(default=False, verbose_name='Может добавлять рекламодателей в сообщениях')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='can_work_staff_message_user', to=settings.AUTH_USER_MODEL, verbose_name='Создатель персонала в опросах')),
            ],
            options={
                'verbose_name': 'Создатель персонала в сообщениях',
                'verbose_name_plural': 'Создатели персонала в сообщениях',
            },
        ),
        migrations.CreateModel(
            name='CanWorkStaffPlannerUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('can_work_administrator', models.BooleanField(default=False, verbose_name='Может добавлять администраторов в планировщике')),
                ('can_work_moderator', models.BooleanField(default=False, verbose_name='Может добавлять модераторов в планировщике')),
                ('can_work_editor', models.BooleanField(default=False, verbose_name='Может добавлять редакторов в планировщике')),
                ('can_work_advertiser', models.BooleanField(default=False, verbose_name='Может добавлять рекламодателей в планировщике')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='can_work_staff_planner_user', to=settings.AUTH_USER_MODEL, verbose_name='Создатель персонала в планировщике')),
            ],
            options={
                'verbose_name': 'Создатель персонала в планировщике',
                'verbose_name_plural': 'Создатели персонала в планировщике',
            },
        ),
        migrations.CreateModel(
            name='CanWorkStaffSitesUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('can_work_administrator', models.BooleanField(default=False, verbose_name='Может добавлять администраторов в сайтах')),
                ('can_work_moderator', models.BooleanField(default=False, verbose_name='Может добавлять модераторов в сайтах')),
                ('can_work_editor', models.BooleanField(default=False, verbose_name='Может добавлять редакторов в сайтах')),
                ('can_work_advertiser', models.BooleanField(default=False, verbose_name='Может добавлять рекламодателей в сайтах')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='can_work_staff_sites_user', to=settings.AUTH_USER_MODEL, verbose_name='Создатель персонала в сайтах')),
            ],
            options={
                'verbose_name': 'Создатель персонала в сайтах',
                'verbose_name_plural': 'Создатели персонала в сайтах',
            },
        ),
        migrations.CreateModel(
            name='CanWorkStaffSurveyUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('can_work_administrator', models.BooleanField(default=False, verbose_name='Может добавлять администраторов в опросах')),
                ('can_work_moderator', models.BooleanField(default=False, verbose_name='Может добавлять модераторов в опросах')),
                ('can_work_editor', models.BooleanField(default=False, verbose_name='Может добавлять редакторов в опросах')),
                ('can_work_advertiser', models.BooleanField(default=False, verbose_name='Может добавлять рекламодателей в опросах')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='can_work_staff_survey_user', to=settings.AUTH_USER_MODEL, verbose_name='Создатель персонала в опросах')),
            ],
            options={
                'verbose_name': 'Создатель персонала в опросах',
                'verbose_name_plural': 'Создатели персонала в опросах',
            },
        ),
        migrations.CreateModel(
            name='CanWorkStaffWikiUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('can_work_administrator', models.BooleanField(default=False, verbose_name='Может добавлять администраторов в википедии')),
                ('can_work_moderator', models.BooleanField(default=False, verbose_name='Может добавлять модераторов в википедии')),
                ('can_work_editor', models.BooleanField(default=False, verbose_name='Может добавлять редакторов в википедии')),
                ('can_work_advertiser', models.BooleanField(default=False, verbose_name='Может добавлять рекламодателей в википедии')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='can_work_staff_wiki_user', to=settings.AUTH_USER_MODEL, verbose_name='Создатель персонала в википедии')),
            ],
            options={
                'verbose_name': 'Создатель персонала в википедии',
                'verbose_name_plural': 'Создатели персонала в википедии',
            },
        ),
        migrations.CreateModel(
            name='ForumUserStaff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.PositiveSmallIntegerField(choices=[(1, 'Администратор'), (4, 'Модератор'), (2, 'Редактор'), (3, 'Рекламодатель')], default=0, verbose_name='Уровень доступа')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='forum_user_staff', to=settings.AUTH_USER_MODEL, verbose_name='Особый пользователь')),
            ],
            options={
                'verbose_name': 'Полномочия в форуме',
                'verbose_name_plural': 'Полномочия в форуме',
            },
        ),
        migrations.CreateModel(
            name='MailUserStaff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.PositiveSmallIntegerField(choices=[(1, 'Администратор'), (4, 'Модератор'), (2, 'Редактор'), (3, 'Рекламодатель')], default=0, verbose_name='Уровень доступа')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='mail_user_staff', to=settings.AUTH_USER_MODEL, verbose_name='Особый пользователь')),
            ],
            options={
                'verbose_name': 'Полномочия в почте',
                'verbose_name_plural': 'Полномочия в почте',
            },
        ),
        migrations.CreateModel(
            name='MessageUserStaff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.PositiveSmallIntegerField(choices=[(1, 'Администратор'), (4, 'Модератор'), (2, 'Редактор'), (3, 'Рекламодатель')], default=0, verbose_name='Уровень доступа')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='message_user_staff', to=settings.AUTH_USER_MODEL, verbose_name='Особый пользователь')),
            ],
            options={
                'verbose_name': 'Полномочия в сообщениях',
                'verbose_name_plural': 'Полномочия в сообщениях',
            },
        ),
        migrations.CreateModel(
            name='PlannerUserStaff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.PositiveSmallIntegerField(choices=[(1, 'Администратор'), (4, 'Модератор'), (2, 'Редактор'), (3, 'Рекламодатель')], default=0, verbose_name='Уровень доступа')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='planner_user_staff', to=settings.AUTH_USER_MODEL, verbose_name='Особый пользователь')),
            ],
            options={
                'verbose_name': 'Полномочия в планировщике',
                'verbose_name_plural': 'Полномочия в планировщиках',
            },
        ),
        migrations.CreateModel(
            name='SitesUserStaff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.PositiveSmallIntegerField(choices=[(1, 'Администратор'), (4, 'Модератор'), (2, 'Редактор'), (3, 'Рекламодатель')], default=0, verbose_name='Уровень доступа')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='sites_user_staff', to=settings.AUTH_USER_MODEL, verbose_name='Особый пользователь')),
            ],
            options={
                'verbose_name': 'Полномочия в сайтах',
                'verbose_name_plural': 'Полномочия в сайтах',
            },
        ),
        migrations.CreateModel(
            name='SurveyUserStaff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.PositiveSmallIntegerField(choices=[(1, 'Администратор'), (4, 'Модератор'), (2, 'Редактор'), (3, 'Рекламодатель')], default=0, verbose_name='Уровень доступа')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='survey_user_staff', to=settings.AUTH_USER_MODEL, verbose_name='Особый пользователь')),
            ],
            options={
                'verbose_name': 'Полномочия в опросах',
                'verbose_name_plural': 'Полномочия в опросах',
            },
        ),
        migrations.CreateModel(
            name='WikiUserStaff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.PositiveSmallIntegerField(choices=[(1, 'Администратор'), (4, 'Модератор'), (2, 'Редактор'), (3, 'Рекламодатель')], default=0, verbose_name='Уровень доступа')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='wiki_user_staff', to=settings.AUTH_USER_MODEL, verbose_name='Особый пользователь')),
            ],
            options={
                'verbose_name': 'Полномочия в википедии',
                'verbose_name_plural': 'Полномочия в википедии',
            },
        ),
        migrations.DeleteModel(
            name='ModerationCategory',
        ),
        migrations.AlterField(
            model_name='audiouserstaff',
            name='level',
            field=models.PositiveSmallIntegerField(choices=[(1, 'Администратор'), (4, 'Модератор'), (2, 'Редактор'), (3, 'Рекламодатель')], default=0, verbose_name='Уровень доступа'),
        ),
        migrations.AlterField(
            model_name='communitystaff',
            name='level',
            field=models.PositiveSmallIntegerField(choices=[(1, 'Администратор'), (4, 'Модератор'), (2, 'Редактор'), (3, 'Рекламодатель')], default=0, verbose_name='Уровень доступа'),
        ),
        migrations.AlterField(
            model_name='docuserstaff',
            name='level',
            field=models.PositiveSmallIntegerField(choices=[(1, 'Администратор'), (4, 'Модератор'), (2, 'Редактор'), (3, 'Рекламодатель')], default=0, verbose_name='Уровень доступа'),
        ),
        migrations.AlterField(
            model_name='gooduserstaff',
            name='level',
            field=models.PositiveSmallIntegerField(choices=[(1, 'Администратор'), (4, 'Модератор'), (2, 'Редактор'), (3, 'Рекламодатель')], default=0, verbose_name='Уровень доступа'),
        ),
        migrations.AlterField(
            model_name='moderated',
            name='status',
            field=models.PositiveSmallIntegerField(choices=[(1, 'На рассмотрении'), (2, 'Объект заморожен'), (3, 'Объект закрыт'), (4, 'Объекту присвоен баннер'), (5, 'Отвергнутый')], default=1, verbose_name='Статус'),
        ),
        migrations.AlterField(
            model_name='moderated',
            name='type',
            field=models.PositiveSmallIntegerField(choices=[(1, 'Пользователь'), (2, 'Сообщество'), (6, 'Сайт'), (59, 'Статья'), (58, 'Список статей'), (25, 'Плейлист'), (26, 'Трек'), (8, 'Список записей'), (9, 'Запись'), (10, 'Коммент к записи'), (17, 'Список документов'), (18, 'Документ'), (21, 'Список опросов'), (22, 'Опрос'), (12, 'Список фотографий'), (13, 'Фотография'), (14, 'Коммент к фотографии'), (29, 'Список роликов'), (30, 'Ролик'), (31, 'Коммент к ролику'), (33, 'Список товаров'), (34, 'Товар'), (35, 'Коммент к товару'), (38, 'Рабочее пространство'), (39, 'Доска'), (40, 'Колонка'), (41, 'Карточка'), (42, 'Коммент к карточке'), (45, 'Обсуждение'), (46, 'Коммент к обсуждению'), (54, 'Почта'), (55, 'Сообщения'), (56, 'Объект википедии')], default=0, verbose_name='Класс объекта'),
        ),
        migrations.AlterField(
            model_name='moderationpenalty',
            name='expiration',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Окончание'),
        ),
        migrations.AlterField(
            model_name='moderationpenalty',
            name='status',
            field=models.PositiveSmallIntegerField(choices=[(1, 'Приостановлено'), (2, 'Закрыто'), (3, 'Вывешен баннер')], default=0, verbose_name='Статус объекта'),
        ),
        migrations.AlterField(
            model_name='moderationpenalty',
            name='type',
            field=models.CharField(choices=[(1, 'Пользователь'), (2, 'Сообщество'), (6, 'Сайт'), (59, 'Статья'), (58, 'Список статей'), (25, 'Плейлист'), (26, 'Трек'), (8, 'Список записей'), (9, 'Запись'), (10, 'Коммент к записи'), (17, 'Список документов'), (18, 'Документ'), (21, 'Список опросов'), (22, 'Опрос'), (12, 'Список фотографий'), (13, 'Фотография'), (14, 'Коммент к фотографии'), (29, 'Список роликов'), (30, 'Ролик'), (31, 'Коммент к ролику'), (33, 'Список товаров'), (34, 'Товар'), (35, 'Коммент к товару'), (38, 'Рабочее пространство'), (39, 'Доска'), (40, 'Колонка'), (41, 'Карточка'), (42, 'Коммент к карточке'), (45, 'Обсуждение'), (46, 'Коммент к обсуждению'), (54, 'Почта'), (55, 'Сообщения'), (56, 'Объект википедии')], max_length=5, verbose_name='Класс объекта'),
        ),
        migrations.AlterField(
            model_name='moderationreport',
            name='type',
            field=models.PositiveSmallIntegerField(choices=[('P', 'Порнография'), ('NC', 'Для взрослых'), ('S', 'Рассылка спама'), ('B', 'Оскорбительное поведение'), ('F', 'Мошенничество'), ('K', 'Клон моей страницы'), ('OP', 'Моя старая страница'), ('D', 'Наркотики'), ('NM', 'Не нравственный контент'), ('RH', 'Риторика ненависти'), ('U', 'Неэтичное поведение')], default=0, verbose_name='Класс объекта'),
        ),
        migrations.AlterField(
            model_name='photouserstaff',
            name='level',
            field=models.PositiveSmallIntegerField(choices=[(1, 'Администратор'), (4, 'Модератор'), (2, 'Редактор'), (3, 'Рекламодатель')], default=0, verbose_name='Уровень доступа'),
        ),
        migrations.AlterField(
            model_name='postuserstaff',
            name='level',
            field=models.PositiveSmallIntegerField(choices=[(1, 'Администратор'), (4, 'Модератор'), (2, 'Редактор'), (3, 'Рекламодатель')], default=0, verbose_name='Уровень доступа'),
        ),
        migrations.AlterField(
            model_name='userstaff',
            name='level',
            field=models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Администратор'), (4, 'Модератор'), (2, 'Редактор'), (3, 'Рекламодатель')], default=0, verbose_name='Уровень доступа'),
        ),
        migrations.AlterField(
            model_name='videouserstaff',
            name='level',
            field=models.PositiveSmallIntegerField(choices=[(1, 'Администратор'), (4, 'Модератор'), (2, 'Редактор'), (3, 'Рекламодатель')], default=0, verbose_name='Уровень доступа'),
        ),
    ]
